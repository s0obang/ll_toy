# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-docker-image:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

  # secret.yml 파일 생성
    - name: Make secret.yml
      run: |
        cd ./src/main/resources
        touch ./secret.yml
          
        echo "${{ secrets.SECRET }}" >> ./secret.yml
      shell: bash
          

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    # springboot 빌드
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #윈도우는 기본적으로 644라 권한 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    #doker 이미지 빌드
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-test .

    #DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    #Docker Hub 이미지 푸시
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-test
    

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  #dependency-submission:

  #  runs-on: ubuntu-latest
   # permissions:
    #  contents: write
#
 #   steps:
  #  - uses: actions/checkout@v4
   # - name: Set up JDK 17
    #  uses: actions/setup-java@v4
     # with:
      #  java-version: '17'
       # distribution: 'temurin'
#
 #   # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
  #  # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
   ##  uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
